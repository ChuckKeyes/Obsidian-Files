/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var q=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var Q=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var H=(e,o)=>{for(var n in o)q(e,n,{get:o[n],enumerable:!0})},G=(e,o,n,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let l of Q(o))!z.call(e,l)&&l!==n&&q(e,l,{get:()=>o[l],enumerable:!(i=_(o,l))||i.enumerable});return e};var W=e=>G(q({},"__esModule",{value:!0}),e);var re={};H(re,{default:()=>A});module.exports=W(re);var a=require("obsidian"),X=`---
title: {{title}}
subtitle: {{subtitle}}
author: "[[{{author}}]]"
type: {{type}}
origin: {{origin}}
asin: {{asin}}
tags: {{type}},{{origin}}
---

`,M=`#### {{content}}

**Note:** {{note}}
**Location:** {{location}}
**Color:** {{color}}
`,B=`
## Daily Reflection

{{quote}}

**{{type}}:** [[{{source}}]]
**Author:** [[{{author}}]]
**Location:** {{location}}

**Note:** {{note}}

---
`,v=["title","subtitle","author","type","origin","asin","ignored","createdAt"],U=new Map,$="\u200B";function k(e,o=1){e=e.replace(/^#/,""),e.length===3&&(e=e.split("").map(s=>s+s).join(""));let n=parseInt(e,16),i=n>>16&255,l=n>>8&255,t=n&255;return`rgba(${i},${l},${t},${o})`}function P(e){if(!e)return"";let o=e.trim().toLowerCase();return o==="grey"&&(o="gray"),o}var y={yellow:"#ffd700",blue:"#4682b4",pink:"#ff69b4",orange:"#ffa500",red:"#ff0000",green:"#008000",olive:"#808000",cyan:"#00ffff",purple:"#800080",gray:"#808080"},K={unearthedApiKey:"",unearthedUserId:"",autoSync:!1,dailyReflectionDateFormat:"YYYY-MM-DD",dailyReflectionLocation:"Daily Notes",addDailyReflection:!1,quoteTemplate:"",sourceTemplate:"",sourceFilenameTemplate:"{{title}}",sourceFilenameLowercase:!0,sourceFilenameReplaceSpaces:"-",lastSyncDate:"",dailyReflectionTemplate:"",rootFolder:"Unearthed",quoteColorMode:"background",customColors:{yellow:y.yellow,blue:y.blue,pink:y.pink,orange:y.orange,red:y.red,green:y.green,olive:y.olive,cyan:y.cyan,purple:y.purple,gray:y.gray}},A=class extends a.Plugin{async onload(){await this.loadSettings();let n=()=>window.moment().format("YYYY-MM-DD");this.app.workspace.onLayoutReady(async()=>{let i=n();if(!window.moment(this.settings.lastSyncDate,"YYYY-MM-DD").isSame(window.moment(),"day"))try{this.settings.addDailyReflection&&await I(this),this.settings.autoSync&&(new a.Notice("Unearthed Sync started, please wait..."),this.performBackgroundSync(i))}catch(l){console.error("Error during startup sync:",l),new a.Notice("Unearthed startup sync failed. Check console for details.")}}),this.addRibbonIcon("book","Kindle/KOReader (Unearthed) Sync",async()=>{new a.Notice("Unearthed Sync started, please wait..."),await I(this),await F(this),new a.Notice("Unearthed Sync complete")}),this.addSettingTab(new N(this.app,this))}onunload(){}async performBackgroundSync(n){try{await F(this),new a.Notice("Unearthed Sync complete"),this.settings.lastSyncDate=n,await this.saveSettings()}catch(i){console.error("Background sync failed:",i),new a.Notice("Unearthed Sync failed. Check console for details.")}}async loadSettings(){this.settings=Object.assign({},K,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};async function F(e,o=!0){try{new a.Notice("Fetching sources...");let{data:n}=await J(e);new a.Notice("Fetching tags...");let i=await O(e);if(U.clear(),n&&n.length>0){new a.Notice(`Processing ${n.length} sources...`);for(let l of n){let t=v.reduce((c,h)=>{let u=l[h],g=typeof u=="string"?u:String(u);return c.replace(new RegExp(`{{${h}}}`,"g"),g)},e.settings.sourceFilenameTemplate),s=E(e,t);U.set(l.id,s)}o&&(new a.Notice("Creating/updating source files..."),await Z(e,n))}i&&i.length>0&&o&&(new a.Notice(`Processing ${i.length} tags...`),await Y(e,i))}catch(n){throw console.error("Sync error:",n),new a.Notice("Sync failed. Check console for details."),n}}async function L(e,o=8e4){return Promise.race([(0,a.requestUrl)(e),new Promise((n,i)=>setTimeout(()=>i(new Error("Request timeout")),o))])}async function J(e){let o=e.settings;return(await L({url:"https://unearthed.app/api/public/obs-obsidian-get",method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o.unearthedApiKey}~~~${o.unearthedUserId}`}},8e4)).json}async function O(e){let o=e.settings;try{let i=(await L({url:"https://unearthed.app/api/public/obs-obsidian-get-tags",method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o.unearthedApiKey}~~~${o.unearthedUserId}`}},8e4)).json;return i.success?i.data:[]}catch(n){return console.error("Error fetching tags:",n),[]}}async function Z(e,o){var l;let n=`${e.settings.rootFolder}/`;try{let t=e.app.vault.getAbstractFileByPath(n);(!t||!(t instanceof a.TFolder))&&await e.app.vault.createFolder(n)}catch(t){}let i=Array.from(new Set(o.map(t=>x(t.type))));for(let t of i){let s=`${n}${t}s/`;try{e.app.vault.getAbstractFileByPath(s)||await e.app.vault.createFolder(s)}catch(c){}}for(let t=0;t<o.length;t++){let s=o[t];t%5===0&&await new Promise(r=>setTimeout(r,0));let c=`${n}${x(s.type)}s/`,h=v.reduce((r,d)=>{let w=s[d],f=typeof w=="string"?w:String(w);return r.replace(new RegExp(`{{${d}}}`,"g"),f)},e.settings.sourceFilenameTemplate),u=`${c}${E(e,h)}.md`,g=`# ${s.title}

**Author:** [[${s.author}]]

**Source:** ${x(s.origin)}

`,T=!1;e.settings.sourceTemplate&&(g=(l=v.reduce((r,d)=>{var w,f;if(e.settings.sourceTemplate.includes(`{{${d}}}`)){T=!0;let b=(w=s[d])!=null?w:"",m=typeof b=="string"?b:String(b);if(d.startsWith("createdAt")){let R=r.match(/{{createdAt(\w*|\|date:\w*-\w*-\w*)}}/g);if(R)for(let C of R)if(C.includes("|date:")){let V=(f=C.match(/\|date:(.+?)}}/))==null?void 0:f[1],j=window.moment(m).format(V);r=r.replace(C,j)}else r=r.replace(C,m);return r}else{console.log("REPLACE key",d);let R=r.replace(new RegExp(`{{${d}}}`,"g"),m);return console.log("toReturn",R),R}}return r},e.settings.sourceTemplate))!=null?l:""),e.settings.sourceTemplate&&!T&&(g=`${e.settings.sourceTemplate}`);let S=[],p="";try{let r=e.app.vault.getAbstractFileByPath(u);if(r instanceof a.TFile){let d=await e.app.vault.read(r);e.settings.quoteTemplate?S=oe(d):S=ae(d),p=d}else p=g}catch(r){p=g}let D=e.settings.quoteTemplate;if(e.settings.quoteTemplate)for(let r of s.quotes){let d=D,w=`${$}${r.content}${$}`;if(!S.includes(r.content)){let f=w;if(e.settings.quoteColorMode!=="none"&&r.color){let b=P(r.color),m="",R=["yellow","blue","pink","orange","red","green","olive","cyan","purple","gray"];for(let C of R)if(b.includes(C)){m=e.settings.customColors[C]||y[C];break}if(m)if(e.settings.quoteColorMode==="background"){let C=k(m,.5);f=`<div style="background: linear-gradient(to right, ${m} 0%, ${C} 100%); color: #fff; padding: 24px 28px; border-radius: 18px; box-shadow: 0 4px 18px rgba(33,140,228,0.12), 0 1.5px 4px rgba(0,0,0,0.08); font-size: 1.15rem; letter-spacing: 0.01em; line-height: 1.6;">${w}</div>`}else e.settings.quoteColorMode==="text"&&(f=`<span style="color: ${m};">${w}</span>`)}d=d.replace("{{content}}",f),r.note?d=d.replace("{{note}}",r.note):d=d.replace("{{note}}",""),d=d.replace("{{location}}",r.location),r.color?d=d.replace("{{color}}",r.color):d=d.replace("{{color}}",""),p+=`
`+d}}else for(let r of s.quotes)if(!S.includes(r.content)){let d=`> ${r.content}`;if(e.settings.quoteColorMode!=="none"&&r.color){let w=P(r.color),f="",b=["yellow","blue","pink","orange","red","green","olive","cyan","purple","gray"];for(let m of b)if(w.includes(m)){f=e.settings.customColors[m]||y[m];break}if(f)if(e.settings.quoteColorMode==="background"){let m=k(f,.5);d=`> <div style="background: linear-gradient(to right, ${f} 0%, ${m} 100%); color: #fff; padding: 24px 28px; border-radius: 18px; box-shadow: 0 4px 18px rgba(33,140,228,0.12), 0 1.5px 4px rgba(0,0,0,0.08); font-size: 1.15rem; letter-spacing: 0.01em; line-height: 1.6;">${r.content}</div>`}else e.settings.quoteColorMode==="text"&&(d=`> <span style="color: ${f};">${r.content}</span>`)}p+=`---

${d}

`,r.note&&(p+=`**Note:** ${r.note}

`),p+=`**Location:** ${r.location}

`,r.color&&(p+=`**Color:** ${r.color}

`)}try{let r=e.app.vault.getAbstractFileByPath(u);r instanceof a.TFile?await e.app.vault.modify(r,p):await e.app.vault.create(u,p)}catch(r){}}}async function Y(e,o){var i;let n=`${e.settings.rootFolder}/Tags/`;try{let l=e.app.vault.getAbstractFileByPath(n);(!l||!(l instanceof a.TFolder))&&await e.app.vault.createFolder(n)}catch(l){}for(let l=0;l<o.length;l++){let t=o[l];l%3===0&&await new Promise(g=>setTimeout(g,0));let s=E(e,t.title);s=await te(e,s);let c=`${n}${s}.md`;if(e.app.vault.getAbstractFileByPath(c)instanceof a.TFile)continue;let u=`# ${t.title}

`;if(t.description&&(u+=`${t.description}

`),t.sourceIds&&t.sourceIds.length>0){u+=`## Sources

`;let g=`${e.settings.rootFolder}/`,T=await e.app.vault.adapter.list(g),S=[];if(T&&T.folders){for(let p of T.folders)if(p!==n)try{let D=await e.app.vault.adapter.list(p);if(D&&D.files){for(let r of D.files)if(r.endsWith(".md")){let d=await e.app.vault.adapter.read(r);for(let w of t.sourceIds)if(d.includes(w)){let f=((i=r.split("/").pop())==null?void 0:i.replace(".md",""))||"Unknown";p.includes("Tags")||S.push(`- [[${f}]]
`);break}}}}catch(D){}}if(S.length>0){let p=[...new Set(S)];for(let D of p)u+=D}else{let p=!1;for(let D of t.sourceIds){let r=U.get(D);r&&(u+=`- [[${r}]]
`,p=!0)}if(!p)for(let D of t.sourceIds){let r=E(e,D);u+=`- [[${r}]]
`}}}try{let g=e.app.vault.getAbstractFileByPath(c);g instanceof a.TFile?await e.app.vault.modify(g,u):await e.app.vault.create(c,u)}catch(g){try{await e.app.vault.create(c,u)}catch(T){}}}}async function ee(e){return(await e.app.vault.adapter.list(`${e.settings.rootFolder}/`)).folders}async function te(e,o){let i=(await ee(e)).filter(t=>t!==`${e.settings.rootFolder}/Tags`),l=1;for(let t of i){let s=await e.app.vault.adapter.list(t);if(s.files.includes(`${t}/${o}.md`)){let c=`${o}-${l}`;for(;s.files.includes(`${t}/${c}.md`);)l++,c=`${o}-${l}`;if(t===i[i.length-1])return c}}return o}async function I(e){try{if(!e.settings.dailyReflectionLocation){new a.Notice("Please specify a Daily Note folder location");return}if(!e.settings.dailyReflectionDateFormat){new a.Notice("Please specify a Daily Note date format");return}await F(e,!1);let o=await se(e);if(!o){new a.Notice("No daily reflection available");return}let n=window.moment(new Date).format(e.settings.dailyReflectionDateFormat),i=`${e.settings.dailyReflectionLocation}/${n}.md`;try{await ne(e,i,o),new a.Notice("Daily reflection added successfully")}catch(l){console.error("Error appending daily reflection:",l),new a.Notice("Failed to add daily reflection")}}catch(o){console.error("Error in getAndAppendDailyReflection:",o),new a.Notice("Daily reflection sync failed. Check console for details.")}}async function ne(e,o,n){let i=e.app.vault.getAbstractFileByPath(o),l="";if(i instanceof a.TFile)l=await e.app.vault.read(i);else{new a.Notice("Daily note does not exist");return}let t=U.get(n.sourceId)||n.source,s=n.quote;if(e.settings.quoteColorMode!=="none"&&n.color){let g=P(n.color),T="",S=["yellow","blue","pink","orange","red","green","olive","cyan","purple","gray"];for(let p of S)if(g.includes(p)){T=e.settings.customColors[p]||y[p];break}if(T)if(e.settings.quoteColorMode==="background"){let p=k(T,.5);s=`<div style="background: linear-gradient(to right, ${T} 0%, ${p} 100%); color: #fff; padding: 24px 28px; border-radius: 18px; box-shadow: 0 4px 18px rgba(33,140,228,0.12), 0 1.5px 4px rgba(0,0,0,0.08); font-size: 1.15rem; letter-spacing: 0.01em; line-height: 1.6;">${n.quote}</div>`}else e.settings.quoteColorMode==="text"&&(s=`<span style="color: ${T};">${n.quote}</span>`)}let c=`
---
## Daily Reflection

> "${s}"

**${x(n.type)}:** [[${t}]]
**Author:** [[${n.author}]]
**Location:** ${n.location}

**Note:** ${n.note}

---
`;e.settings.dailyReflectionTemplate&&(c=e.settings.dailyReflectionTemplate,c=c.replace("{{quote}}",s),c=c.replace("{{type}}",x(n.type)),c=c.replace("{{source}}",t),c=c.replace("{{author}}",n.author),c=c.replace("{{location}}",n.location),c=c.replace("{{note}}",n.note?n.note:""),c=c.replace("{{dailyReflectionContent}}",`> "${s}"

**${x(n.type)}:** [[${t}]]
**Author:** [[${n.author}]]
**Location:** ${n.location}

**Note:** ${n.note}`));let h=`${$}${c}${$}`,u=!1;e.settings.dailyReflectionTemplate?u=ie(l,e.settings.dailyReflectionTemplate):u=l.includes("## Daily Reflection"),u||(l+=h,await e.app.vault.modify(i,l))}async function se(e){let o=e.settings,n=await L({url:"https://unearthed.app/api/public/obs-daily-reflection",method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o.unearthedApiKey}~~~${o.unearthedUserId}`}},8e4),{data:i}=n.json;return!i||!i.dailyReflection||typeof i=="undefined"?!1:{type:i.dailyReflection.source.type,source:i.dailyReflection.source.title,sourceId:i.dailyReflection.source.id,author:i.dailyReflection.source.author,quote:i.dailyReflection.quote.content,note:i.dailyReflection.quote.note,location:i.dailyReflection.quote.location,color:i.dailyReflection.quote.color||""}}function ae(e){let o=/>\s(.+?)\n/g,n=[],i;for(;(i=o.exec(e))!==null;)n.push(i[1].trim());return n}function oe(e){let o=new RegExp(`${$}(.+?)${$}`,"g"),n=[],i;for(;(i=o.exec(e))!==null;){let l=i[1].trim();n.push(l)}return n}function ie(e,o){return o?new RegExp(`${$}(.*?)${$}`,"gs").exec(e)!==null:e.includes("## Daily Reflection")}var N=class extends a.PluginSettingTab{constructor(n,i){super(n,i);this.plugin=i}display(){let{containerEl:n}=this;n.empty(),new a.Setting(n).setName("Unearthed API key").setDesc("Copy and paste your API key from unearthed.app").addText(t=>t.setPlaceholder("Enter your secret").setValue(this.plugin.settings.unearthedApiKey).onChange(async s=>{this.plugin.settings.unearthedApiKey=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Unearthed User ID").setDesc("Copy and paste your Unearthed user ID from unearthed.app").addText(t=>t.setPlaceholder("Enter your User ID").setValue(this.plugin.settings.unearthedUserId).onChange(async s=>{this.plugin.settings.unearthedUserId=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Auto sync").setDesc("Begin the sync process every time obsidian is loaded").addToggle(t=>t.setValue(this.plugin.settings.autoSync).onChange(async s=>{this.plugin.settings.autoSync=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Add daily reflection to daily note on startup").setDesc("Automatically add a Daily Reflection section to your Daily note when Obsidian starts").addToggle(t=>t.setValue(this.plugin.settings.addDailyReflection).onChange(async s=>{this.plugin.settings.addDailyReflection=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Daily reflection (date format)").setDesc("The format of the daily note file name. You can copy this from the Core->Daily notes plugin settings").addText(t=>t.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dailyReflectionDateFormat).onChange(async s=>{this.plugin.settings.dailyReflectionDateFormat=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Daily reflection (new file location)").setDesc("The folder of your Daily notes. You can copy this from the Core->Daily notes plugin settings.").addSearch(t=>{t.setPlaceholder("Example: Daily Notes/").setValue(this.plugin.settings.dailyReflectionLocation).onChange(async s=>{this.plugin.settings.dailyReflectionLocation=s,await this.plugin.saveSettings()}),t.inputEl.type="text",t.inputEl.setAttribute("data-type","folder")}),new a.Setting(n).setName("Manual sync").setDesc("Manually trigger a sync").addButton(t=>t.setButtonText("Sync").onClick(async()=>{new a.Notice("Unearthed Sync started, please wait..."),await F(this.plugin),new a.Notice("Unearthed Sync complete")})),new a.Setting(n).setName("Manual daily reflection sync").setDesc("Manually trigger a sync for the Daily Reflection").addButton(t=>t.setButtonText("Sync").onClick(async()=>{new a.Notice("Unearthed Sync started, please wait..."),await I(this.plugin),new a.Notice("Complete - check your daily note")})),new a.Setting(n).setName("Manual tag sync").setDesc("Manually link tags to source files").addButton(t=>t.setButtonText("Link Tags").onClick(async()=>{new a.Notice("Syncing and linking tags, please wait..."),await F(this.plugin,!1);let s=await O(this.plugin);s&&s.length>0&&await Y(this.plugin,s),new a.Notice("Tags linked to sources successfully")})),new a.Setting(n).setName("Filename template").setDesc("The template used to format the filename for each source(book). Press 'Insert Options' to append the available options.").addButton(t=>t.setButtonText("Insert Options").onClick(async()=>{for(let s of v)this.plugin.settings.sourceFilenameTemplate+=`{{${s}}}
`;await this.plugin.saveSettings(),this.display()})).addText(t=>t.setPlaceholder("Enter filename template").setValue(this.plugin.settings.sourceFilenameTemplate).onChange(async s=>{this.plugin.settings.sourceFilenameTemplate=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Filename lowercase").setDesc("Save source(book) filenames in lowercase").addToggle(t=>t.setValue(this.plugin.settings.sourceFilenameLowercase).onChange(async s=>{this.plugin.settings.sourceFilenameLowercase=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Filename replace spaces with").setDesc("Enter a character to replace spaces and invalid characters with").addText(t=>t.setPlaceholder("Enter character").setValue(this.plugin.settings.sourceFilenameReplaceSpaces).onChange(async s=>{this.plugin.settings.sourceFilenameReplaceSpaces=s,await this.plugin.saveSettings()})),new a.Setting(n).setName("Source(book) template").setDesc("The template used to format each source(book). Press 'Insert Options' to append the available options.").addButton(t=>t.setButtonText("Insert Options").onClick(async()=>{for(let s of v)this.plugin.settings.sourceTemplate+=`{{${s}}}
`,s=="createdAt"&&(this.plugin.settings.sourceTemplate+=`{{createdAt|date:YYYY-MM-DD}}
`);await this.plugin.saveSettings(),this.display()})).addTextArea(t=>t.setValue(this.plugin.settings.sourceTemplate).onChange(async s=>{this.plugin.settings.sourceTemplate=s,await this.plugin.saveSettings()}).inputEl.style.height="200px"),new a.Setting(n).setName("Quote template").setDesc("The template used to format each individual quote/note. Placeholders: {{content}}, {{note}}, {{location}}, {{color}}. Press 'Insert Template' button for an example.").addButton(t=>t.setButtonText("Insert Template").onClick(async()=>{this.plugin.settings.quoteTemplate=M,await this.plugin.saveSettings(),this.display()})).addTextArea(t=>t.setValue(this.plugin.settings.quoteTemplate).onChange(async s=>{this.plugin.settings.quoteTemplate=s,await this.plugin.saveSettings()}).inputEl.style.height="200px"),new a.Setting(n).setName("Daily reflection template").setDesc("The template used to format the daily reflection section in your daily note. Placeholders: {{quote}}, {{type}}, {{source}}, {{author}}, {{location}}, {{note}}. Press 'Insert Template' button for an example.").addButton(t=>t.setButtonText("Insert Template").onClick(async()=>{this.plugin.settings.dailyReflectionTemplate=B,await this.plugin.saveSettings(),this.display()})).addTextArea(t=>t.setValue(this.plugin.settings.dailyReflectionTemplate).onChange(async s=>{this.plugin.settings.dailyReflectionTemplate=s,await this.plugin.saveSettings()}).inputEl.style.height="200px"),new a.Setting(n).setName("Root folder").setDesc("The root folder where all Unearthed content will be stored").addSearch(t=>{t.setPlaceholder("Default: Unearthed").setValue(this.plugin.settings.rootFolder).onChange(async s=>{this.plugin.settings.rootFolder=s||"Unearthed",await this.plugin.saveSettings()}),t.inputEl.type="text",t.inputEl.setAttribute("data-type","folder")}),new a.Setting(n).setName("Quote color styling").setDesc("Choose how to apply color styling to quotes based on their highlight color").addDropdown(t=>{t.addOption("none","No color styling").addOption("background","Apply as background color").addOption("text","Apply as text color").setValue(this.plugin.settings.quoteColorMode).onChange(async s=>{this.plugin.settings.quoteColorMode=s,await this.plugin.saveSettings()})}),new a.Setting(n).setName("Custom highlight colors").setDesc("Customize the colors used for each highlight type");let l=["yellow","blue","pink","orange","red","green","olive","cyan","purple","gray"];for(let t of l)new a.Setting(n).setName(`${t.charAt(0).toUpperCase()+t.slice(1)} highlight`).addText(s=>{var u;let c=s.setPlaceholder(y[t]).setValue(this.plugin.settings.customColors[t]).onChange(async g=>{this.plugin.settings.customColors[t]=g,await this.plugin.saveSettings()});c.inputEl.type="color",c.inputEl.style.width="50px",c.inputEl.style.height="24px";let h=createEl("button");h.textContent="Reset",h.style.marginLeft="10px",h.addEventListener("click",async()=>{this.plugin.settings.customColors[t]=y[t],c.setValue(y[t]),await this.plugin.saveSettings()}),(u=c.inputEl.parentElement)==null||u.appendChild(h)});new a.Setting(n).setName("Last auto sync date").setDesc(this.plugin.settings.lastSyncDate?this.plugin.settings.lastSyncDate:"Never"),new a.Setting(n).setName("Reset settings").setDesc("Reset all Unearthed settings back to their default values").addButton(t=>t.setButtonText("Reset to defaults").setWarning().onClick(async()=>{let s=this.plugin.settings.unearthedApiKey,c=this.plugin.settings.unearthedUserId,h=this.plugin.settings.lastSyncDate;this.plugin.settings=Object.assign({},K),this.plugin.settings.sourceTemplate=X,this.plugin.settings.quoteTemplate=M,this.plugin.settings.dailyReflectionTemplate=B,this.plugin.settings.unearthedApiKey=s,this.plugin.settings.unearthedUserId=c,this.plugin.settings.lastSyncDate=h,await this.plugin.saveSettings(),this.display(),new a.Notice("Settings have been reset to defaults")}))}};function E(e,o,n={}){if(typeof o!="string")throw new Error("Input must be a string");let l={...{replacement:e.settings.sourceFilenameReplaceSpaces?e.settings.sourceFilenameReplaceSpaces:" ",lowercase:e.settings.sourceFilenameLowercase,trimSpaces:!0,collapseSpaces:!0},...n},t=o;l.lowercase&&(t=t.toLowerCase()),t=t.replace(/[\\/:"*?<>|]/g,l.replacement),t=t.split("").map(h=>{let u=h.charCodeAt(0);return u<32||u===127?l.replacement:h}).join(""),l.collapseSpaces&&(t=t.replace(/\s+/g," ")),l.trimSpaces&&(t=t.trim()),t=t.replace(/\s/g,l.replacement);let c=l.replacement.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");return t=t.replace(new RegExp(`${c}+`,"g"),l.replacement),t=t.replace(new RegExp(`^${c}+|${c}+$`,"g"),""),t}function x(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}

/* nosourcemap */